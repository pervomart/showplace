{"version":3,"sources":["panels/Main.js","panels/Home.js","App.js","index.js"],"names":["Main","id","go","fetchedUser","fetchedGeo","separator","size","class","style","width","height","title","onClick","data-to","osName","platform","Home","props","left","IOS","before","photo_200","src","description","city","first_name","last_name","App","useState","activePanel","setActivePanel","setUser","setGeo","popout","setPopout","useEffect","a","bridge","send","user","location","setInterval","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"wsBAgDeA,G,OAnCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAP,EAAWC,YAAX,EAAwBC,WAAxB,OAEZ,kBAAC,IAAD,CAAOH,GAAIA,GACV,kBAAC,IAAD,CAAaI,UAAU,QAAvB,qDACM,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMC,KAAK,KACP,yBAAKC,MAAM,aAAaC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,MAArD,MAEJ,kBAAC,IAAD,CAAMJ,KAAK,KACP,yBAAKC,MAAM,aAAaC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,MAArD,MAEJ,kBAAC,IAAD,CAAMJ,KAAK,KACP,yBAAKC,MAAM,aAAaC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,MAArD,OAKR,kBAAC,IAAD,CAAOC,MAAM,wCAChB,kBAAC,IAAD,KACH,4BAAQJ,MAAM,aAAaK,QAASV,EAAIW,UAAQ,UAI7C,kBAAC,IAAD,KACE,yBAAKN,MAAM,cAAX,U,iGCnBDO,G,OAASC,eA8CAC,EA3CF,SAAAC,GAAK,OACjB,kBAAC,IAAD,CAAOhB,GAAIgB,EAAMhB,IAChB,kBAAC,IAAD,CACCiB,KAAM,kBAAC,IAAD,CAAmBN,QAASK,EAAMf,GAAIW,UAAQ,QAClDC,IAAWK,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,2GAOCF,EAAMd,aACP,kBAAC,IAAD,CAAOQ,MAAM,6IACZ,kBAAC,IAAD,CACCS,OAAQH,EAAMd,YAAYkB,UAAY,kBAAC,IAAD,CAAQC,IAAKL,EAAMd,YAAYkB,YAAe,KACpFE,YAAaN,EAAMd,YAAYqB,MAAQP,EAAMd,YAAYqB,KAAKb,MAAQM,EAAMd,YAAYqB,KAAKb,MAAQ,IAFtG,UAIKM,EAAMd,YAAYsB,WAJvB,YAIqCR,EAAMd,YAAYuB,aAIxD,kBAAC,IAAD,KACA,yBAAKzB,GAAG,OAAR,4FCYa0B,EA3CH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVzB,EAFU,KAEG4B,EAFH,OAGYH,mBAAS,MAHrB,mBAGVxB,EAHU,KAGE4B,EAHF,OAIWJ,mBAAS,kBAAC,IAAD,CAAetB,KAAK,WAJxC,mBAIV2B,EAJU,KAIFC,EAJE,KAMjBC,qBAAU,WAAM,4CAQf,8BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,cACOC,EADP,gBAEsBF,IAAOC,KAAK,qBAAsB,IAFxD,OAEKE,EAFL,OAGCT,EAAQQ,GACRP,EAAOQ,GACPN,EAAU,MACVO,YAAW,sBACV,sBAAAL,EAAA,sEACkBC,IAAOC,KAAK,qBAAsB,IADpD,OACCE,EADD,OAECR,EAAOQ,GAFR,2CAGG,KAVL,6CARe,sBACfH,IAAOK,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAqBfQ,KACE,IAEH,IAAMpD,EAAK,SAAAqD,GACVzB,EAAeyB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAAC,IAAD,CAAM7B,YAAaA,EAAaI,OAAQA,GACvC,kBAAC,EAAD,CAAMhC,GAAG,OAAOC,GAAIA,IACpB,kBAAC,EAAD,CAAMD,GAAG,OAAOE,YAAaA,EAAaC,WAAYA,EAAYF,GAAIA,MCvCzEmC,IAAOC,KAAK,gBAEZqB,IAASC,OAAO,kBAAC,EAAD,MAASb,SAASc,eAAe,W","file":"static/js/main.49b4d15a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Card from '@vkontakte/vkui/dist/components/Card/Card';\r\nimport CardScroll from '@vkontakte/vkui/dist/components/CardScroll/CardScroll';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\n\r\nimport './css/Main.css';\r\n\r\nconst Main = ({ id, go, fetchedUser, fetchedGeo }) => (\r\n\t\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader separator=\"hide\">iЧтоЗдесь</PanelHeader>\r\n        <CardScroll>\r\n            <Card size=\"m\">\r\n                <div class=\"topcard c1\" style={{ width: 259, height: 152 }}> </div>\r\n            </Card>\r\n            <Card size=\"m\">\r\n                <div class=\"topcard c2\" style={{ width: 259, height: 152 }}> </div>\r\n            </Card>\r\n            <Card size=\"m\">\r\n                <div class=\"topcard c5\" style={{ width: 259, height: 152 }}> </div>\r\n            </Card>\r\n        </CardScroll>\r\n\r\n\r\n        <Group title=\"Страна\">\r\n     <Div>\r\n\t\t<button class=\"country c3\" onClick={go} data-to=\"home\">\r\n\r\n\t\t</button>\r\n     </Div>\r\n     <Div>\r\n       <div class=\"country c4\"> </div>\r\n     </Div>\r\n  \t\t</Group>\r\n\t</Panel>\r\n);\r\n\r\nMain.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nimport { platform, IOS } from '@vkontakte/vkui';\n\nimport './css/Home.css';\n\n\nconst osName = platform();\n\n\nconst Home = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"main\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tМоё местоположение\n\t\t</PanelHeader>\n\t\t{props.fetchedUser &&\n\t\t<Group title=\"Кто у нас тут путешествует?\">\n\t\t\t<Cell\n\t\t\t\tbefore={props.fetchedUser.photo_200 ? <Avatar src={props.fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={props.fetchedUser.city && props.fetchedUser.city.title ? props.fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${props.fetchedUser.first_name} ${props.fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Div>\n\t\t<div id=\"map\">Контейнер карты</div>\n\t</Div>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n\tfetchedGeo: PropTypes.shape({\n\t\tlat: PropTypes.string,\n\t\tlong: PropTypes.string,\n\t}),\n\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Main from './panels/Main';\r\nimport Home from './panels/Home';\r\n\r\n\r\nconst App = () => {\r\n\tconst [activePanel, setActivePanel] = useState('main');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [fetchedGeo, setGeo] = useState(null);\r\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t\t}\r\n\t\t});\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tvar location = await bridge.send(\"VKWebAppGetGeodata\", {});\r\n\t\t\tsetUser(user);\r\n\t\t\tsetGeo(location);\r\n\t\t\tsetPopout(null);\r\n\t\t\tsetInterval(\r\n\t\t\t\tasync function(){\r\n\t\t\t\t\tlocation = await bridge.send(\"VKWebAppGetGeodata\", {});\r\n\t\t\t\t\tsetGeo(location);\r\n\t\t\t\t}, 5000\r\n\t\t\t);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View activePanel={activePanel} popout={popout}>\r\n\t\t\t<Main id='main' go={go} />\r\n\t\t\t<Home id='home' fetchedUser={fetchedUser} fetchedGeo={fetchedGeo} go={go} />\r\n\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}