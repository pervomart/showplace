{"version":3,"sources":["img/cs1.jpg","img/cs2.jpg","panels/Main.js","panels/Home.js","App.js","index.js"],"names":["module","exports","Main","id","go","fetchedUser","fetchedGeo","size","style","width","height","src","cardimg1","alt","cardimg2","title","level","onClick","data-to","osName","platform","Home","props","left","IOS","before","photo_200","description","city","first_name","last_name","lat","long","App","useState","activePanel","setActivePanel","setUser","setGeo","popout","setPopout","useEffect","a","bridge","send","user","location","setInterval","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ff79869a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cs1.fe600669.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cs2.0fe4027b.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Card from '@vkontakte/vkui/dist/components/Card/Card';\r\nimport CardScroll from '@vkontakte/vkui/dist/components/CardScroll/CardScroll';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\nimport cardimg1 from '../img/cs1.jpg';\r\nimport cardimg2 from '../img/cs2.jpg';\r\n\r\nconst Main = ({ id, go, fetchedUser, fetchedGeo }) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader>Чтоздесь?!</PanelHeader>\r\n        <CardScroll>\r\n            <Card size=\"m\">\r\n                <div style={{ width: 224, height: 96 }}><img src={cardimg1} alt=\"\" /></div>\r\n            </Card>\r\n            <Card size=\"m\">\r\n                <div style={{ width: 224, height: 96 }}><img src={cardimg2} alt=\"\" /></div>\r\n            </Card>\r\n        </CardScroll>\r\n\r\n\t\t<Group title=\"Навигация\">\r\n\t\t\t<Div>\r\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"home\">\r\n\t\t\t\t\tМоё местоположение\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n\t\t</Group>\r\n\t</Panel>\r\n);\r\n\r\nMain.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nimport { platform, IOS } from '@vkontakte/vkui';\nconst osName = platform();\n\nconst Home = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"main\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tМоё местоположение\n\t\t</PanelHeader>\n\t\t{props.fetchedUser &&\n\t\t<Group title=\"Кто у нас тут путешествует?\">\n\t\t\t<Cell\n\t\t\t\tbefore={props.fetchedUser.photo_200 ? <Avatar src={props.fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={props.fetchedUser.city && props.fetchedUser.city.title ? props.fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${props.fetchedUser.first_name} ${props.fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t{props.fetchedGeo &&\n\t\t<Group title=\"Мы вычислили, где ты находишься.\">\n\t\t\t<Cell>\n\t\t\t\t{`${props.fetchedGeo.lat} ${props.fetchedGeo.long}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\t\t<Div>\n\t\t\tЭто твои координаты\n\t\t</Div>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n\tfetchedGeo: PropTypes.shape({\n\t\tlat: PropTypes.string,\n\t\tlong: PropTypes.string,\n\t}),\n\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Main from './panels/Main';\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('main');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [fetchedGeo, setGeo] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tvar location = await bridge.send(\"VKWebAppGetGeodata\", {});\n\t\t\tsetUser(user);\n\t\t\tsetGeo(location);\n\t\t\tsetPopout(null);\n\t\t\tsetInterval(\n\t\t\t\tasync function(){\n\t\t\t\t\tlocation = await bridge.send(\"VKWebAppGetGeodata\", {});\n\t\t\t\t\tsetGeo(location);\n\t\t\t\t}, 5000\n\t\t\t);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Main id='main' go={go} />\n\t\t\t<Home id='home' fetchedUser={fetchedUser} fetchedGeo={fetchedGeo} go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}